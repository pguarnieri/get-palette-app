# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: lambci/lambda:build-python3.7

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Update lambda
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      run: |
        mkdir -p ./packages/get_palette
        cp -r get_palette ./packages/get_palette # cp -r seems to copy files without preserving the dir structure :shrug:

        unzip -o './lambda_wheels/*' -d ./packages

        rm -rf ./packages/*.dist-info ./packages/*/__pycache__
        find ./packages -iname tests -type d -exec rm -rf {} +

        cd ./packages
        zip -r9 ${OLDPWD}/function.zip .

        cd $OLDPWD
        zip function.zip lambda_function.py

        aws s3 cp function.zip s3://get-palette-app/function.zip
        aws lambda update-function-code --function-name getPaletteApp --s3-bucket get-palette-app --s3-key function.zip
